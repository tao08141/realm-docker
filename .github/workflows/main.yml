name: Daily Docker Build

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # 允许推送 heartbeat 提交
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get latest version
        id: get-version
        run: |
          LATEST_TAG=$(curl -sL https://api.github.com/repos/zhboner/realm/releases/latest | jq -r '.tag_name')
          echo "latest_version=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Restore cached version
        uses: actions/cache@v3
        id: version-cache
        with:
          path: version.txt
          key: realm-version-cache

      - name: Read previous version
        id: read-previous
        run: |
          if [ -f version.txt ]; then
            PREVIOUS_VERSION=$(cat version.txt)
            echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          else
            echo "previous_version=" >> $GITHUB_OUTPUT
          fi

      - name: Compare versions
        id: compare-versions
        run: |
          if [ "${{ steps.get-version.outputs.latest_version }}" == "${{ steps.read-previous.outputs.previous_version }}" ]; then
            echo "build_needed=false" >> $GITHUB_OUTPUT
            echo "✅ Version unchanged, skipping build"
          else
            echo "build_needed=true" >> $GITHUB_OUTPUT
            echo "🚨 New version detected, starting build"
          fi

      - name: Heartbeat commit (update last run date)
        run: |
            mkdir -p .github
            echo "Last run (UTC): $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > .github/last_run.txt
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .github/last_run.txt
            if git diff --cached --quiet; then
              echo "No heartbeat changes to commit."
            else
              git commit -m "chore: heartbeat $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
              git push
            fi

      - name: Build Docker image
        if: steps.compare-versions.outputs.build_needed == 'true'
        run: |
          VERSION=${{ steps.get-version.outputs.latest_version }}
          
          cat <<EOF > Dockerfile
          FROM ubuntu
          ARG VERSION
          RUN apt-get update && apt-get install -y curl tar ca-certificates --no-install-recommends && rm -rf /var/lib/apt/lists/*

          RUN curl -L -o /tmp/realm.tar.gz \
            "https://github.com/zhboner/realm/releases/download/\${VERSION}/realm-x86_64-unknown-linux-musl.tar.gz" \
            && tar -xzf /tmp/realm.tar.gz -C /tmp \
            && mv /tmp/realm /usr/bin/realm \
            && chmod +x /usr/bin/realm \
            && rm /tmp/realm.tar.gz
          ENTRYPOINT ["/usr/bin/realm"]
          EOF

          docker build --build-arg VERSION="$VERSION" -t ghcr.io/${{ github.repository }}:$VERSION .

          echo "$VERSION" > version.txt

          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker tag ghcr.io/${{ github.repository }}:$VERSION ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:$VERSION
          docker push ghcr.io/${{ github.repository }}:latest
